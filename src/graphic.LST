C51 COMPILER V7.06   GRAPHIC                                                               07/25/2013 23:19:41 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE GRAPHIC
OBJECT MODULE PLACED IN graphic.OBJ
COMPILER INVOKED BY: C:\software\keil\C51\BIN\C51.EXE graphic.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          /*
   3          // NOTE:  Graphic LCD TEXT Routines
   4          
   5                  Screen Layout:
   6                  Ymax
   7                  ^ --------------------------|
   8                  |                           |
   9                  |                           |
  10                  |         LCD Screen        |
  11                  |                           |
  12                  |                           |
  13                  0 --------------------------> Xmax
  14                  
  15                  Font Data Sequence:
  16                  MSB----->MSB
  17                  ||                ||
  18                  ||                ||
  19                  \/                \/
  20                  LSB----->LSB
  21                          MSB----->MSB
  22                          ||                ||
  23                          ||                ||
  24                          \/                \/
  25                          LSB----->LSB
  26          */
  27          
  28          #include "cms015.h"
  29          
  30          // LCD Max value for x and y
  31          #define LCD_XMAX        220
  32          #define LCD_YMAX        176
  33          
  34          // Total Pages(Vertical Addressin')
  35          #define LCD_PMAX        (LCD_YMAX/8)    
  36          
  37          // Selectable Font Types
  38          #define ASC0508         1
  39          #define ASC2448         2
  40          
  41          // Defintions of Font Size
  42          #define TXT0508         1
  43          #define TXT2448         2
  44          
  45          #ifdef ASC0508
  46                  #include "Asc0508v.h"
  47          #endif
  48          #ifdef ASC2448
  49                  #include "Asc2448v.h"
  50          #endif
  51          
  52          unsigned char code ColorDef[16][2]={
  53          {0x00,0x00},                    //0-ºÚ
  54          {0xf8,0x00},                    //1-ºì
  55          {0x07,0xe0},                    //2-ÂÌ
C51 COMPILER V7.06   GRAPHIC                                                               07/25/2013 23:19:41 PAGE 2   

  56          {0x00,0x1f},                    //3-À¶
  57          {0xff,0xe0},                    //4-rg»Æ
  58          {0x07,0xff},                    //5-gb
  59          {0xf8,0x1f},                    //6-rb×Ï
  60          {0x7b,0xef},                    //7-»Ò
  61          {0x39,0xe7},                    //8-Ç³»Ò
  62          {0x78,0x00},                    //9-ºì
  63          {0x03,0xe0},                    //10-ÂÌ
  64          {0x00,0x0f},                    //11-À¶
  65          {0x7b,0xe0},                    //12-rg»Æ
  66          {0x03,0xef},                    //13-gb
  67          {0x78,0x0f},                    //14-rb×Ï
  68          {0xff,0xff}                     //15-»Ò
  69          };
  70          
  71          #define RED     ColorDef[0]
  72          #define GREEN   ColorDef[1]
  73          #define BLUE    ColorDef[2]
  74          #define WHITE   ColorDef[3]
  75          #define BLACK   ColorDef[4]
  76          #define Purple  ColorDef[5]
  77          #define YELLOW  ColorDef[6]
  78          #define Sea     ColorDef[7]
  79          
  80          // The structure of color data
  81          typedef struct ColorInfo
  82          {
  83                  unsigned char dataH;
  84                  unsigned char dataL;    
  85          }tColor;
  86          
  87          // System color definition
  88          tColor fgColor=WHITE;           // Foreground color
*** ERROR C248 IN LINE 88 OF GRAPHIC.C: aggregate initialization needs curly braces
  89          tColor bgColor=BLACK;           // Background color
*** ERROR C248 IN LINE 89 OF GRAPHIC.C: aggregate initialization needs curly braces
  90          
  91          unsigned char TxtRows;  // Rows the LCD can display some font
  92          unsigned char TxtCols;  // Columns the LCD can display some font
  93          
  94          unsigned FontSize = TXT0508;
  95          unsigned code     *ptrAscFont = 0;
  96          
  97          // Global Variables
  98          unsigned char Pnow = 0;         // Current Page Address(Attention for V/H)
  99          unsigned int Ynow = 0;          // Current point's Y position
 100          unsigned int Xnow = 0;          // Current point's X position(Column Address)
 101          
 102          
 103          // Set the font type for display(eg.TXT0508)
 104          void SetFont(unsigned char fontx)
 105          {
 106   1              FontSize = fontx;
 107   1              
 108   1              if (fontx == TXT0508)
 109   1              {
 110   2              #ifdef ASC0508
 111   2                      ptrAscFont = Asc0508;
 112   2                      TxtRows = LCD_YMAX/8;
 113   2                      TxtCols = LCD_XMAX/6;
 114   2              #endif
 115   2              }
C51 COMPILER V7.06   GRAPHIC                                                               07/25/2013 23:19:41 PAGE 3   

 116   1              else
 117   1              {
 118   2              #ifdef ASC2448
 119   2                      ptrAscFont = Asc2448;
 120   2                      TxtRows = LCD_YMAX/48;
 121   2                      TxtCols = LCD_XMAX/24;
 122   2              #endif
 123   2              }
 124   1      }
 125          
 126          // Put an ASCII char onto the screen
 127          void putchar(unsigned char AscChar)
 128          {
 129   1              unsigned char idata i, tmp;
 130   1              unsigned char idata Dmax;       // Total Bytes for a char's FontData
 131   1              unsigned char idata FontData[16];
 132   1              unsigned int idata BaseAddr;    // Base Address for FontData
 133   1              
 134   1              if (FontSize == TXT0508)
 135   1              {
 136   2                      Dmax = 5;
 137   2                      FontData[5] = 0x00;             // Insert a SPACE column
 138   2              }
 139   1              else
 140   1              { Dmax = 16; }
 141   1              
 142   1              BaseAddr = (AscChar - 0x20)*Dmax;
 143   1              
 144   1              // Get font data
 145   1              for (i = 0; i < Dmax; i++)
 146   1              { FontData[i] = ptrAscFont[BaseAddr + i]; }
 147   1              
 148   1              // Send font data
 149   1              if (Dmax == 5) tmp = 6; else tmp = 8;
 150   1              Dmax = Xnow;    // Dmax for temp.var
 151   1              for (i = 0; i < tmp; i++)
 152   1              { WriteDAT8(FontData[i]); }
 153   1              
 154   1              if (FontSize == TXT2448)
 155   1              {
 156   2                      LCD_SetXY(Pnow - 1, Dmax);
 157   2                      for (i = 8; i < 16; i++)
 158   2                      { WriteDAT8(FontData[i]); }
 159   2                      LCD_SetXY(Pnow + 1, Xnow);
 160   2              }
 161   1      }
 162          
 163          // Display xNumber AscChars
 164          void putchars(unsigned char AscChar, unsigned char xNumber)
 165          {
 166   1              while(xNumber-- != 0)
 167   1              putchar(AscChar);
 168   1      }
 169          
 170          // Tile screen with one letter
 171          void aTile(unsigned char AscChar)
 172          {
 173   1              unsigned i;
 174   1              
 175   1              // Display "ABC"
 176   1              for (i = 0; i < TxtRows; i++)
 177   1              {
C51 COMPILER V7.06   GRAPHIC                                                               07/25/2013 23:19:41 PAGE 4   

 178   2                      LCD_SetXY(LCD_PMAX - 1 - i*FontSize, 0);
 179   2                      putchars(AscChar, TxtCols);
 180   2              }
 181   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  2 ERROR(S)
