C51 COMPILER V7.06   EEPROM                                                                07/25/2013 23:19:41 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN eeprom.OBJ
COMPILER INVOKED BY: C:\software\keil\C51\BIN\C51.EXE eeprom.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          #include <intrins.h> 
   3          #include "config.h"
   4           
   5          //程序中是否使用中断
   6          #define  USE_ISR       1   
   7          
   8          #define  USE_EROM_read_continuous     0
   9          #define  USE_EROM_write_continuous    0
  10          #define  USE_EROM_read_word           0
  11          #define  USE_EROM_write_word          0
  12                   
  13          // STC89C52RC         EEOPROM大小： 4K，首址：0x2000，触发：0x5A，0xA5 
  14          // STC11F01E          EEOPROM大小： 2K，首址：0x0000，触发：0x5A，0xA5 
  15          // STC12C5410AD       EEOPROM大小：12K，首址：0x0000，触发：0x46，0xB9 
  16          // STC12C4052         EEOPROM大小：10K，首址：0x0000，触发：0x46，0xB9
  17          // STC12C5A32S2       EEOPROM大小：28K，首址：0x0000，触发：0x5A，0xA5
  18          // STC12C5A60S2       EEOPROM大小： 1K，首址：0x0000，触发：0x5A，0xA5
  19          #define  STC12C5A60S2
  20          // STC15F104E         EEOPROM大小： 1K，首址：0x0000，触发：0x5A，0xA5
  21          // STC15F204EA        EEOPROM大小： 1K，首址：0x0000，触发：0x5A，0xA5
  22          
  23          #if defined (__STC10xxx_H__)\
  24            || defined (__STC11xxx_H__)\ 
  25            || defined (__STC12xx052_H__)\
  26            || defined (__STC12x52xx_H__)\
  27            || defined (__STC12x54xx_H__)\
  28            || defined (__STC12x56xx_H__)\
  29            || defined (STC12C5A60S2)\
  30            || defined (__STC15F104E_H__)\
  31            || defined (__STC15F204EA_H__)  
  32                     #define  EROM_START    0x0000 
  33          #elif defined (__STC90x51_H__)
                         #define  EROM_START    0x1000
              #elif defined (__STC89x51_H__) || defined (__STC89x52_H__) || defined (__STC90x52_H__) 
                         #define  EROM_START    0x2000
              #elif defined (__STC90x12_H__)
                         #define  EROM_START    0x3000
              #elif defined (__STC89x54_H__) || defined (__STC90x54_H__) 
                         #define  EROM_START    0x4000
              #elif defined (__STC89x58_H__) || defined (__STC90x58_H__)
                         #define  EROM_START    0x8000
              #elif defined (__STC89x510_H__) || defined (__STC90x510_H__)
                         #define  EROM_START    0xA000        
              #elif defined (__STC89x512_H__) || defined (__STC90x512_H__)
                         #define  EROM_START    0xC000
              #elif defined (__STC89x514_H__) || defined (__STC90x514_H__)
                         #define  EROM_START    0xE000        
              #elif
                   #warning "STC型号未定义，相应宏定义 EROM_START 缺失"  
              #endif
  52           
  53          //ISP触发命令（不同STC型号有所不同）
  54          #if defined (__STC10xxx_H__)\
  55            || defined (__STC11xxx_H__)\ 
C51 COMPILER V7.06   EEPROM                                                                07/25/2013 23:19:41 PAGE 2   

  56            || defined (__STC12x52xx_H__)\
  57            || defined (STC12C5A60S2)\
  58            || defined (__STC15F104E_H__)\
  59            || defined (__STC15F204EA_H__) //STC10xxx, STC11xxx, STC12x5Axx, 12x52xx系列ISP触发命令: 0x5A，0xA5     
             - 
  60               #define  ISPTRIG()           ISP_TRIG = 0x5A, ISP_TRIG = 0xA5                
  61          #elif defined (__STC89_90xxx_H__)\ 
  62            || defined (__STC12xx052_H__)\
  63            || defined (__STC12x54xx_H__)\
  64            || defined (__STC12x56xx_H__) //STC89xxx, STC90xxx, STC12xx052, STC12x54xx, STC12x56xx系列ISP触发命令: 0
             -x46，0xB9      
                   #define  ISPTRIG()           ISP_TRIG = 0x46, ISP_TRIG = 0xB9
              #elif
                    #warning "STC型号未定义，相应宏定义 ISPTRIG() 缺失"         
              #endif        
  69           
  70           
  71          #if   ( CPU_FOSC >= 24000000 )
  72               #define  EN_ISP  0x80          //系统时钟 >= 24MHz
  73          #elif ( CPU_FOSC >= 20000000 )
                   #define  EN_ISP  0x81          //系统时钟 >= 20MHz
              #elif ( CPU_FOSC >= 12000000 )
                   #define  EN_ISP  0x82          //系统时钟 >= 12MHz
              #elif ( CPU_FOSC >=  6000000 )
                   #define  EN_ISP  0x83          //系统时钟 >= 6MHz
              #elif ( CPU_FOSC >=  3000000 )
                   #define  EN_ISP  0x84          //系统时钟 >= 3MHz
              #elif ( CPU_FOSC >=  2000000 )
                   #define  EN_ISP  0x85          //系统时钟 >= 2MHz
              #elif ( CPU_FOSC >=  1000000 )
                   #define  EN_ISP  0x86          //系统时钟 >= 1MHz
              #else
                   #define  EN_ISP  0x87          //系统时钟 < 1MHz
              #endif
  88                   
  89          
  90          extern cs;
  91                                           
  92          /********************************************************************
  93          函数：IAP触发命令 + 禁止IAP操作（清IAP相关寄存器）
  94          ********************************************************************/
  95          static void command_and_close( void )
  96           {
  97   1       #if (USE_ISR)  
  98   1               EA = 0;   
  99   1       #endif
 100   1       
 101   1           ISPTRIG();                
 102   1           _nop_(); 
 103   1           _nop_(); 
 104   1           _nop_();
 105   1        
 106   1       #if (USE_ISR)
 107   1               EA = 1;  
 108   1       #endif
 109   1                 
 110   1           ISP_CONTR = 0;    
 111   1           ISP_CMD   = 0;          
 112   1           ISP_TRIG  = 0;                   
 113   1           ISP_ADDRH = 0xFF;      
 114   1           ISP_ADDRL = 0xFF;              
 115   1       }
C51 COMPILER V7.06   EEPROM                                                                07/25/2013 23:19:41 PAGE 3   

 116           
 117          /********************************************************************
 118           函数：读指定地址一字节数据                   
 119           输入：（地址） 
 120           返回：（地址内容） 
 121          ********************************************************************/
 122          unsigned char EROM_read_byte(unsigned int addr)
 123           {                      
 124   1           ISP_CONTR = EN_ISP;   
 125   1           ISP_CMD   = 1;                   //允许读取EEPROM
 126   1           ISP_ADDRL = addr;                
 127   1           ISP_ADDRH = (unsigned char)(addr>>8) + (unsigned char)(EROM_START>>8);               
 128   1           command_and_close();
 129   1                 
 130   1           return ISP_DATA;                        
 131   1       }
 132           
 133          /********************************************************************
 134           函数：向指定地址写一字节数据
 135           输入：（地址，数据）
 136          ********************************************************************/
 137          void EROM_write_byte(unsigned int addr, unsigned char dat)
 138           {     
 139   1           ISP_CONTR = EN_ISP;        
 140   1           ISP_CMD   = 2;                  //允许编写EEPROM
 141   1           ISP_ADDRL = addr;                
 142   1           ISP_ADDRH = (unsigned char)(addr>>8) + (unsigned char)(EROM_START>>8);           
 143   1           ISP_DATA  = dat;
 144   1                                         
 145   1           command_and_close();    
 146   1       }
 147           
 148          /********************************************************************
 149           函数：擦除指定扇区          
 150           输入：（扇区号）
 151          ********************************************************************/
 152          void EROM_erase_sector(unsigned char n)
 153           {           
 154   1           ISP_CONTR = EN_ISP; 
 155   1           ISP_CMD   = 3;            //允许擦除EEPROM     
 156   1           ISP_ADDRL = 0x00;                
 157   1           ISP_ADDRH = (unsigned char)(EROM_START>>8) + n*0x02; 
 158   1                                                  
 159   1           command_and_close();
 160   1       }
 161           
 162          /********************************************************************
 163           函数：连续读数据                   
 164           输入：（起始地址，指针指向，字节长）
 165          ********************************************************************/
 166          #if (USE_EROM_read_continuous)
              void EROM_read_continuous(unsigned int addr, unsigned char READPointer *pr, unsigned char len)
               {                         
                   while (len--)
                   { 
                       *pr = EROM_read_byte(addr);
                       pr++;
                       addr++;
                   }                                    
               }
              #endif
 177           
C51 COMPILER V7.06   EEPROM                                                                07/25/2013 23:19:41 PAGE 4   

 178          /********************************************************************
 179           函数：连续写数据
 180           输入：（起始地址，指针指向，字节长）
 181          ********************************************************************/
 182          #if (USE_EROM_write_continuous)
              void EROM_write_continuous(unsigned int addr, unsigned char WRITEPointer *pr, unsigned char len)
               {
                   while (len--)
                   { 
                       EROM_write_byte(addr, *pr); 
                       pr++;
                       addr++;
                   }                  
               }        
              #endif
 193           
 194          /********************************************************************
 195           函数：读指定地址一字数据        
 196          ********************************************************************/
 197          #if (USE_EROM_read_word)
              unsigned int EROM_read_word(unsigned int addr)
               {                      
                   unsigned int dat;
                 
                   ((unsigned char *)&dat)[0] = EROM_read_byte(addr++);
                   ((unsigned char *)&dat)[1] = EROM_read_byte(addr);
                   return dat;                        
               }
              #endif
 207           
 208          /********************************************************************
 209           函数：向指定地址写一字数据
 210          ********************************************************************/
 211          #if (USE_EROM_write_word)
              void EROM_write_word(unsigned int addr, unsigned int dat)
               {     
                   EROM_write_byte(addr++, ((unsigned char *)&dat)[0]); 
                   EROM_write_byte(addr, ((unsigned char *)&dat)[1]);   
               }
              #endif
 218          
 219          /********************************************************************
 220           函数：向第二扇区读写数据
 221          ********************************************************************/
 222          void cs_RW(unsigned char rw)
 223          {
 224   1       unsigned char i,*p = &cs;
 225   1       const unsigned int offs=512;
 226   1       if(rw){
 227   2        EROM_erase_sector(2); //第二扇区
 228   2        for(i=0;i<sizeof(cs);i++) EROM_write_byte(i+offs,p[i]);
 229   2       }else{
 230   2        for(i=0;i<sizeof(cs);i++) p[i]=EROM_read_byte(i+offs);
 231   2       }
 232   1      }
 233          
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V7.06   EEPROM                                                                07/25/2013 23:19:41 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
