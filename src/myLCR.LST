C51 COMPILER V7.06   MYLCR                                                                 07/25/2013 23:19:41 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MYLCR
OBJECT MODULE PLACED IN myLCR.OBJ
COMPILER INVOKED BY: C:\software\keil\C51\BIN\C51.EXE myLCR.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          #include <stdio.h>
   3          #include "config.h"
   4          
   5          extern Fun_idx=FUN_R;   //当前功能索引
   6          extern Rang_idx=R40;    //当前量程索引
   7          extern Frq_idx=F1K;     //当前频率索引
   8          extern Mode_idx=MODE_S; //当前模式索引
   9          extern Gain_idx=GAIN1;  //当前增益索引
  10          extern Vxy_idx=VX_A;    //当前测量索引
  11          
  12          extern Actual_Frq;
  13          extern Vxy[];
  14          
  15          //增益表
  16          code unsigned char gainB[4] =  {  1,   3,   9,  27 };
  17          //各档电阻表
  18          code float resistorB[4] = { 40, 1e3, 1e4, 1e5 };
  19          
  20          
  21          /***********************************************************************
  22          Function : Fmt
  23          Note     : 显示LCR
  24          ***********************************************************************/
  25          void Fmt(float a)
  26          {
  27   1              unsigned char showString[20];
  28   1              sprintf(showString, "%.2f", a);
  29   1      }
  30          
  31          /***********************************************************************
  32          Function : showR
  33          Note     : 显示LCR
  34          ***********************************************************************/
  35          void showR(void){ 
  36   1              //显示频率
  37   1              //LCD_Locate(2,0); 
  38   1              //if (Frq_idx==F100) LCD_PrintChar('A');
  39   1              //if (Frq_idx==F1K) LCD_PrintChar('B');
  40   1              //if (Frq_idx==F7K8) LCD_PrintChar('C');
  41   1              //显示量程
  42   1              //LCD_PrintChar(Rang_idx+49);
  43   1      
  44   1              //LCD_Locate(1,0);
  45   1              if (Mode_idx==MODE_S)//串联
  46   1              {
  47   2                      //LCD_PrintString("Zs");
  48   2      
  49   2                      //LCD_PrintString('R'); 
  50   2      
  51   2                      //LCD_Locate(2,4);
  52   2              }
  53   1              if (Mode_idx==MODE_P)//并联
  54   1              {
  55   2                      //LCD_PrintString("Zp");
C51 COMPILER V7.06   MYLCR                                                                 07/25/2013 23:19:41 PAGE 2   

  56   2              }
  57   1                
  58   1      }
  59          
  60          
  61          
  62          /***********************************************************************
  63          Function : calcLCR
  64          Note     : 计算LCR
  65          ***********************************************************************/
  66          void calcLCR(void){
  67   1              xdata float a=0,b=0,c=0;
  68   1              xdata float w=0;
  69   1      
  70   1              a =  +(Vxy[VX_C] * Vxy[VX_C] + Vxy[VY_D] * Vxy[VY_D] );
  71   1              b =  -( Vxy[VX_A] * Vxy[VX_C] + Vxy[VY_B] * Vxy[VY_D]);
  72   1              c =  -(Vxy[VY_B] * Vxy[VX_C] - Vxy[VX_A] * Vxy[VY_D]);
  73   1              
  74   1              a /= resistorB[Rang_idx];  //除以下臂电阻阻值
  75   1       
  76   1              w = 2*3.1415926* Actual_Frq;
  77   1      }
  78          
  79          /***********************************************************************
  80          Function : setGain
  81          Note     : 设置电路增益
  82          ***********************************************************************/
  83          void setGain(unsigned char switch_sts){
  84   1        if (switch_sts!=Gain_idx) { Gain_idx=switch_sts; }
  85   1        else  { Gain_idx = (Gain_idx+1)%4; }
  86   1       
  87   1        K4 = Gain_idx & 2, K6 = Gain_idx & 1; //1倍--27倍
  88   1      }
  89          
  90          /***********************************************************************
  91          Function : absMax
  92          Note     : 取两个数绝对值最大者
  93          ***********************************************************************/
  94          int absMax(int a,int b)
  95          {
  96   1        if(a<0) a = -a;
  97   1        if(b<0) b = -b;
  98   1        if(b>a) a = b;
  99   1        return a;
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----      16
   PDATA SIZE       =     12      20
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
