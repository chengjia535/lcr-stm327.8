C51 COMPILER V7.06   KEY                                                                   07/25/2013 23:19:41 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.OBJ
COMPILER INVOKED BY: C:\software\keil\C51\BIN\C51.EXE key.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          #include "config.h"
   3          #include "pwm.h"
   4          
   5          
   6          volatile unsigned char Trg = 0;
   7          volatile unsigned char Cont = 0;
   8          
   9          unsigned char cnt_plus=0;
  10          
  11          extern Fun_idx;
  12          extern Frq_idx; 
  13          extern Mode_idx;
  14          extern Rang_idx;
  15          
  16          /***********************************************************************
  17          Function : KeyRead
  18          Note     : 读键盘 
  19          ***********************************************************************/
  20          void KeyRead(void)
  21          {
  22   1         unsigned char ReadData = (KEYPort);
  23   1         Trg = ReadData & (ReadData ^ Cont);
  24   1         Cont = ReadData;
  25   1      }
  26          
  27          /***********************************************************************
  28          Function : C_Done
  29          Note     : 清零开关 
  30          ***********************************************************************/
  31          void C_Done(unsigned char switch_sts)
  32          {
  33   1              unsigned char i = switch_sts;
  34   1        //if (switch_sts<>Cls_idx) Cls_idx=switch_sts;
  35   1        //else  { Cls_idx = (Cls_idx+1)%2; }
  36   1      }
  37          
  38          /***********************************************************************
  39          Function : M_Done
  40          Note     : 功能开关
  41          ***********************************************************************/
  42          void M_Done(unsigned char switch_sts)
  43          {
  44   1         if (switch_sts!=Fun_idx) {Fun_idx=switch_sts;}
  45   1         else  { Fun_idx = (Fun_idx+1)%3; }
  46   1        
  47   1      }
  48          
  49          /***********************************************************************
  50          Function : setRng
  51          Note     : 量程开关
  52          ***********************************************************************/
  53          void setRng(unsigned char switch_sts)
  54          {
  55   1         if (switch_sts!=Rang_idx) { Rang_idx=switch_sts; }
C51 COMPILER V7.06   KEY                                                                   07/25/2013 23:19:41 PAGE 2   

  56   1         else  { Rang_idx = (Rang_idx+1)%4; }
  57   1      
  58   1         Ka = Rang_idx & 2, Kb = Rang_idx & 1; 
  59   1      }
  60          
  61          /***********************************************************************
  62          Function : X_Done
  63          Note     : 模式开关 
  64          ***********************************************************************/
  65          void X_Done(unsigned char switch_sts)
  66          {
  67   1         if (switch_sts!=Mode_idx) { Mode_idx=switch_sts; }
  68   1         else  { Mode_idx = (Mode_idx+1)%2; }
  69   1      }
  70          
  71          /***********************************************************************
  72          Function : setFrq 
  73          Note     : 频率开关 
  74          ***********************************************************************/
  75          void setFrq(unsigned char switch_sts)
  76          {
  77   1        if (switch_sts!=Frq_idx) { Frq_idx=switch_sts; }
  78   1        else  { Frq_idx = (Frq_idx+1)%3; }
  79   1      
  80   1        if (Frq_idx==F100) { K5=0,K8=1; setDDS(F100); }     //100H滤波
  81   1        if (Frq_idx==F1K) { K5=0,K8=0; setDDS(F1K); }      //1K滤波
  82   1        if (Frq_idx==F7K8) { K5=1;K8=0; setDDS(F7K8); }     //7K8滤波
  83   1      }
  84          
  85          /***********************************************************************
  86          Function : KeyProc
  87          Note     : 键盘处理 
  88          ***********************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    258    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      3       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
